
* タイマーを用意すれば乱数はいらないかも

* マッチングの組み方次第でANDとORは実装できる

* 鍵を持てるようにすればよい

** 物の着脱ができるようにすればよいのでは

* パターンマッチをなるべく使う

* エディターの機能を増やす

** 根本の仕組みは冗長でも編集を楽にする

* Viscuitのちゅーとりあるを見る
   
* マッチングに必要な機能
  
**  単一オブジェクトのマッチ

**  当たり判定
   マークを付ける
   特殊な当りかた（角度指定など）はオブジェクトを置いて指定する

** 外部イベント(コントローラー、)

** 備考
反射は後回し
iphoneで周囲の状況をモデル化する技術があるらしい
物理ルールの再現ができるといいな

** このルールで実装して動作するか検証

* マッチングルールの記述の仕方
あとまわし

* TODO 07/02時点

** 未実装の要素
*** 敵の湧きのコントロール
*** 敵弾の跳ね返し
** 新たに必要と思われる要素
*** プレイヤーの前で敵を止める
** Notの実装
*** 「弾が特定範囲内にない」ことのマッチングに否定が必要(?)
*** 問題: マッチ後のターゲットの指定方法が不明
**** 単一マッチの否定
***** 否定したマッチのオブジェクトは存在しないのだから、新たなオブジェクトを選定する必要がある
**** 当たり判定の否定
***** 最初にベースとなるオブジェクトを選ぶ必要がある
**** 外部イベントの否定
***** イベント単体はターゲットをもたないので、別に指定する必要がある

*** 問題: 否定の意味合いについて
**** 単一マッチの否定
***** そのオブジェクトが存在しない
**** 当たり判定の否定
***** ゲーム全体で指定した二種のオブジェクトが接触していない
***** ある存在するオブジェクトが特定のオブジェクトと接触していない
      欲しいのはこっち
**** 外部イベントの否定
***** イベントが走っていない

* マッチングの順番に柔軟性を持たせる

** 脳死で順番にマッチさせていくのはまずい

** 優先順位とかつけたい

* テキストでは作りにくいものをつくれるように

** 回転、角度の処理

** 穴にはめるような判定

* viscuitにない要素

** 物理シミュレーション

*** ルールベースとの共存

** スコアを外部環境として

** 加速度

** 既存のシステムに追加できる

*** VRゲームがつくりやすくなる

* ＶＲゲームをつくりやすくするUnityPackage

** Unityのシステムとは共存したまま一部の挙動を書きやすくする

* VIVEのデモゲームが作れるかが指標になりうる

** 他のVRゲームも作れるかなど検討する

** VRゲーム業界の調査も必要

** VRゲームをサンプルケースとしてリストアップ

* ルールの作り方を考える

** 最小のルールのパターンを列挙してみる

** 表したいルールを考える

** どの条件があればどういったルールが書けるのかをまとめる

** ルールの表現の仕方

*** ただの接触と位置を限定した接触をどう描き分けるか

** マッチ後の効果もまとめる必要がある

*** 物理シミュレーションへの干渉

*** オブジェクト生成

*** 物をずらす、回転させる

*** ルール側の情報をどう使うか

* 発表の流れ

** 修論でどういったことをするのか

*** どういうシステムを作るのか

*** Viscuit

** 現状できているものの紹介

*** 想定した簡単なテストケース、それのために考えたシステム

*** 動画を撮る

** 研究の目標、狙い、どこに新規性を見出したいか

*** 研究として何が新しいのか

** 必要な議論、検討しなければいけない点

*** 全体図、個々の検討

** 今後の計画、関連研究

*** VRゲーム制作環境としての比較

**** セカンドライフ

**** Unity VREditor

**** 3DのViscuit(なにかあったはず)
